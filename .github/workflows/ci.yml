name: starlineBot CI
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        node-version: [16.11.0]
    steps:
      - uses: actions/checkout@v4
      - name: use node.js ${{matrix.node-version}}
        uses: actions/setup-node@v4
        with:
          node-version: ${{matrix.node-version}}
      - name: create env file
        working-directory: ./
        run: |
          pwd
          touch .env
          echo NODE_ENV=${{ secrets.NODE_ENV }} >> .env
          echo TOKEN=${{ secrets.TOKEN }} >> .env
          echo CHANNEL_ID=${{ secrets.CHANNEL_ID }} >> .env
          echo DEV_CHANNEL_ID=${{ secrets.DEV_CHANNEL_ID }} >> .env
          echo PARTY_RECRUITMENT=${{ secrets.PARTY_RECRUITMENT }} >> .env
          echo DEV_PARTY_RECRUITMENT=${{ secrets.DEV_PARTY_RECRUITMENT }} >> .env
          echo ROLE_AUDITING_CHANNEL_ID=${{ secrets.ROLE_AUDITING_CHANNEL_ID }} >> .env
          echo DEV_ROLE_AUDITING_CHANNEL_ID=${{ secrets.DEV_ROLE_AUDITING_CHANNEL_ID }} >> .env
          echo GUILD_ROLE=${{ secrets.GUILD_ROLE }} >> .env
          echo DEV_GUILD_ROLE=${{ secrets.DEV_GUILD_ROLE }} >> .env
          echo GUILD_ID=${{ secrets.GUILD_ID }} >> .env
          echo DEV_GUILD_ID=${{ secrets.DEV_GUILD_ID }} >> .env
          echo GUILD_ADMIN_ROLE_ID=${{ secrets.GUILD_ADMIN_ROLE_ID }} >> .env
          echo DEV_GUILD_ADMIN_ROLE_ID=${{ secrets.DEV_GUILD_ADMIN_ROLE_ID }} >> .env
          echo GUILD_GUEST_ROLE_ID=${{ secrets.GUILD_GUEST_ROLE_ID }} >> .env
          echo DEV_GUILD_GUEST_ROLE_ID=${{ secrets.DEV_GUILD_GUEST_ROLE_ID }} >> .env
          cat .env

      - run: npm ci
      - run: npm run build --if-present
      - run: npm run lint
      - run: npm run test
